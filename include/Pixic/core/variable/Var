#pragma once

#include "Pixic/core library/C OOP.h"
#include <Pixic/core/typedefs/variable/Var>

#include <Pixic/core/typedefs/variable/Arithmetical>
#include <Pixic/core/typedefs/variable/Var_null>
#include <Pixic/core/typedefs/variable/Var_int>
#include <Pixic/core/typedefs/variable/Var_float>
#include <Pixic/core/typedefs/Int>
#include <Pixic/core/typedefs/Float>

interface (Var)
{
	size_t cast;

	void
		(*set)(Var *self, Var *rvalue),
		(*set2)(Var *self, Var_null *lvalue),
		(*set3)(Var *self, Var_int *lvalue),
		(*set4)(Var *self, Var_float *lvalue);
	Arithmetical
		(*op_mod)(Var *self, Var *roperand),
		(*op_mod2)(Var *self, Var_int *loperand),
		(*op_mod3)(Var *self, Var_float *loperand),
		(*op_div)(Var *self, Var *roperand),
		(*op_div2)(Var *self, Var_int *loperand),
		(*op_div3)(Var *self, Var_float *loperand),
		(*op_idiv)(Var *self, Var *roperand),
		(*op_idiv2)(Var *self, Var_int *loperand),
		(*op_idiv3)(Var *self, Var_float *loperand),
		(*op_mul)(Var *self, Var *roperand),
		(*op_mul2)(Var *self, Var_int *loperand),
		(*op_mul3)(Var *self, Var_float *loperand),
		(*op_not)(Var *self),
		(*op_bnot)(Var *self),
		(*op_add)(Var *self, Var *roperand),
		(*op_add2)(Var *self, Var_int *loperand),
		(*op_add3)(Var *self, Var_float *loperand),
		(*op_neg)(Var *self),
		(*op_sub)(Var *self, Var *roperand),
		(*op_sub2)(Var *self, Var_int *loperand),
		(*op_sub3)(Var *self, Var_float *loperand),
		(*op_rsh)(Var *self, Var *roperand),
		(*op_rsh2)(Var *self, Var_int *loperand),
		(*op_rsh3)(Var *self, Var_float *loperand),
		(*op_lsh)(Var *self, Var *roperand),
		(*op_lsh2)(Var *self, Var_int *loperand),
		(*op_lsh3)(Var *self, Var_float *loperand),
		(*op_eq)(Var *self, Var *roperand),
		(*op_eq2)(Var *self, Var_int *loperand),
		(*op_eq3)(Var *self, Var_float *loperand),
		(*op_neq)(Var *self, Var *roperand),
		(*op_neq2)(Var *self, Var_int *loperand),
		(*op_neq3)(Var *self, Var_float *loperand),
		(*op_less)(Var *self, Var *roperand),
		(*op_less2)(Var *self, Var_int *loperand),
		(*op_less3)(Var *self, Var_float *loperand),
		(*op_great)(Var *self, Var *roperand),
		(*op_great2)(Var *self, Var_int *loperand),
		(*op_great3)(Var *self, Var_float *loperand),
		(*op_leq)(Var *self, Var *roperand),
		(*op_leq2)(Var *self, Var_int *loperand),
		(*op_leq3)(Var *self, Var_float *loperand),
		(*op_geq)(Var *self, Var *roperand),
		(*op_geq2)(Var *self, Var_int *loperand),
		(*op_geq3)(Var *self, Var_float *loperand),
		(*op_bor)(Var *self, Var *roperand),
		(*op_bor2)(Var *self, Var_int *loperand),
		(*op_bor3)(Var *self, Var_float *loperand),
		(*op_bxor)(Var *self, Var *roperand),
		(*op_bxor2)(Var *self, Var_int *loperand),
		(*op_bxor3)(Var *self, Var_float *loperand),
		(*op_band)(Var *self, Var *roperand),
		(*op_band2)(Var *self, Var_int *loperand),
		(*op_band3)(Var *self, Var_float *loperand),
		(*op_or)(Var *self, Var *roperand),
		(*op_or2)(Var *self, Var_int *loperand),
		(*op_or3)(Var *self, Var_float *loperand),
		(*op_and)(Var *self, Var *roperand),
		(*op_and2)(Var *self, Var_int *loperand),
		(*op_and3)(Var *self, Var_float *loperand);
	long (*to_long)(Var *self);
	long long (*to_long_long)(Var *self);
	float (*to_float)(Var *self);
	double (*to_double)(Var *self);
	Int (*to_Int)(Var *self);
	Float (*to_Float)(Var *self);
	bool (*to_bool)(Var *self);
};