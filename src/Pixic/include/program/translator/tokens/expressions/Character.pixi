/*
(C) 2022-2023 Серый MLGamer <Seriy-MLGamer@yandex.ru>

This file is part of Pixic.
Pixic is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
Pixic is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with Pixic. If not, see <https://www.gnu.org/licenses/>.
*/

/**
 * @file program/translator/tokens/expressions/Character.pixi
 *
 * Dependencies.
 * program/translator/tokens/expressions/Expression_traits.pixi
 * program/translator/Text.pixi
 * program/info/syntax errors.pixi
 * program/translator/generator/generator.pixi
 * program/translator/tokens/show.pixi
 */

fn Character_new($text)
{
	$self=Expression_traits_new(0, 0)
	$self.f=Character

	Text_promise_position($text)
	$self.text=$text.data
	if Text_get($text)!='\''
	{
		Text_reject_position($text)

		remove($self)
		ret(-1)
	}
	$self.character_start=$text[0, $text.top]
	$backslash=0
	while 1
	{
		$char=Text_get($text)
		if $backslash
		{
			$backslash=0
		}
		else{if $char=='\''
		{
			$self.character_length=$text[0, $text.top]-1-$self.character_start
			Text_resolve_position($text)

			ret($self)
		}
		else{if $char=='\\'
		{
			$backslash=1
		}
		else{if $char==EOF
		{
			if $text[1, $text.top]==get_ysize($text.lines)
			{
				$text[1, $text.top]-1
				syntax_error_expected($text, '\'')
			}
		}}}}
	}
}
Character=new(1, 1, INT8)
Character.generate=Character_generate
Character.generate_call=Character_generate_call
Character.show=Character_show
Character.remove=Character_remove
fn Character_generate($self)
{
	generator_deinit()
	developer_error_not_implemented("character generation")
}
fn Character_generate_call($self)
{
	generator_deinit()
	developer_error_not_implemented("function call by address")
}
fn Character_show($self)
{
	begin_object()
		indent() logf("\"type\": \"Character\"") next_property()
		indent()
			$character=new($self.character_length, 1, INT8)
			copy($character, $self.text, 0, $self.character_start)
			logf("\"character\": \"%s\"", $character)
			remove($character)
	end_object()
}
fn Character_remove($self)
{
	remove($self)
}