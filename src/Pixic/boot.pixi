/*
Copyright (C) 2022 Серый MLGamer <Seriy-MLGamer@yandex.ru>

This file is part of Pixic.
Pixic is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
Pixic is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with Pixic. If not, see <https://www.gnu.org/licenses/>.
*/

include "include/dependencies.pixi"

logf("Input: %s
Output: %s
Folder: %s
", input, output, folder)

some_text=Text_new(input)
data=some_text.data
lines=some_text.lines
lines_count=get_ysize(lines)
temp_str=new(1, 1, INT8)
for (a=0; a!=lines_count; a+1)
{
	size=lines[1, a]-lines[0, a]
	if size
	{
		resize(temp_str, size)
		copy(temp_str, data, 0, lines[0, a])
		logf("%i: %s\n", lines[2, a], temp_str)
	}
}
some_stack=Stack_new(INT)
Stack_push(some_stack, Position_new(some_text.lines[0, 0], 0))
expression=parse_expression(some_text, some_stack)
expression.f.show(expression) logf("
Stack size: %i\n", some_stack.pointer+1)